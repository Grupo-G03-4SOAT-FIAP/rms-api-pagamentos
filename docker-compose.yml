version: '3.9'

services:
  api-pagamentos:
    container_name: api-pagamentos
    hostname: api-pagamentos
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3003:3003'
    expose:
      - 3003
    env_file:
      - .env
    environment:
      MONGO_URL: ${MONGO_URL:-}
      URL_API_PEDIDOS: http://api-pedidos:3002/pedido
      ACCESS_TOKEN_MERCADOPAGO: ${ACCESS_TOKEN_MERCADOPAGO:-}
      USER_ID_MERCADOPAGO: ${USER_ID_MERCADOPAGO:-}
      EXTERNAL_POS_ID_MERCADOPAGO: ${EXTERNAL_POS_ID_MERCADOPAGO:-}
      WEBHOOK_URL_MERCADOPAGO: ${WEBHOOK_URL_MERCADOPAGO:-}
      IDEMPOTENCY_KEY_MERCADOPAGO: ${IDEMPOTENCY_KEY_MERCADOPAGO:-a005986e-f97c-4274-91cf-b32d2672824f}
    restart: always
    networks:
      - rms
    depends_on:
      - db-pagamentos
  
  db-pagamentos:
    container_name: db-pagamentos
    image: mongo:7.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=auth
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 1024M
    restart: always
    networks:
      - rms

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - db-pagamentos
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_SERVER=db-pagamentos
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    ports:
      - "8081:8081"
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 1024M
    restart: always
    networks:
      - rms
          
networks:
  rms:
    name: rms_network
    driver: bridge